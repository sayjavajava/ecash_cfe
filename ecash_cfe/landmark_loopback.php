<?php
/**
 * Loopback server used to test the Landmark ACH class
 * 
 * This *should* respond the same way as DCAS's 
 * HTTPS server, randomizing whether or not the
 * transaction will succeed or fail.  For those
 * that succesed, there is still a strong chance
 * it will get returned in the return file, which
 * is also generated by this script.
 * 
 * @author Brian Ronald <brian.ronald@sellingsource.com>
 * @package Landmark_ACH
 */

require_once('config.php');
require_once(SQL_LIB_DIR . "util.func.php");

$log = get_log();
$log->Write("Loopback Request: " . var_export($_REQUEST, TRUE));

// We're really only concerned with the iData
// portion of the request.  It contains all of
// the data required for the transaction.
$iData = explode(',', $_REQUEST['iData']);
$record_key   = $iData[0];
$bank_aba	  = $iData[1];
$bank_account = $iData[2];
$ach_id		  = $iData[3];
$amount		  = $iData[4];
$fullname	  = $iData[6];
$address	  = $iData[7];
$city		  = $iData[8];
$state	      = $iData[9];
$zip 		  = $iData[10];
$phone		  = $iData[11];

// A list of return codes and reasons
$return_codes = array(
	array('return_code' => 'R01',	'return_reason'	=> 'Insufficient Funds'),
	array('return_code' => 'R02',	'return_reason'	=> 'Account closed'),
	array('return_code' => 'R03',	'return_reason'	=> 'No account / Unable to locate account'),
	array('return_code' => 'R04',	'return_reason'	=> 'Invalid account number'),
);

// The output structure, with defaults for a successful
// transaction.
$return = array();
$return['result'] = '0000';	// 0000 or 9999  (Success or Failure)
$return['error']  = ''; 	// Error message or blank
$return['oData']['record_key'] 			= $record_key;
$return['oData']['ach_routing_number'] 	= $bank_aba;
$return['oData']['ach_account_number'] 	= $bank_account;
$return['oData']['return_code'] 		= 'A00 - Transaction OK';
$return['oData']['confirmation_number'] = rand(1000,9999);

// Determine if we're going to fail the transaction
// then assign a random return code
$rand = rand(0, 20);
if($rand % 7)
{
	$return['result'] = 9999;
	$key = rand(0, count($return_codes) -1);
	$return['oData']['return_code'] = $return_codes[$key]['return_code'] . " - " . $return_codes[$key]['return_reason'];
	$return['oData']['confirmation_number'] = '';
}

// oData is contains the most useful data
// and is returned in comma delimited form
$odata = implode(',', $return['oData']);

echo $return['result'] . "\n";
echo $return['error'] . "\n";
echo $odata . "\n";

// If it wasn't a failure, lets give it a chance of coming back as returned
if($return['result'] !== 9999)
{
	$rand = rand(0, 10);
	if($rand % 2)
	{
		$key = rand(0, count($return_codes) -1);

		$return_file['record_key'] 			= $record_key;
		$return_file['bank_aba'] 			= $bank_aba;
		$return_file['bank_account'] 		= $bank_account;
		$return_file['lm_ach_id'] 			= $ach_id;
		$return_file['amount'] 				= $amount;
		$return_file['return_code'] 		= $return_codes[$key]['return_code'];
		$return_file['return_reason'] 		= $return_codes[$key]['return_reason'];
		$return_file['confirmation_code']	= '';
		$return_file['invoice_number'] 		= '';
		$return_file['late_return_flag'] 	= '';
	
		$row = implode(',', $return_file);
		$row .= "\n";
		
		$fp = fopen("/tmp/lm_return_file.txt", 'a+');
		fputs($fp, $row);
		fclose($fp);
	}
}